<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GETTING STARTED on Scala2 官方文档</title><link>https://scala2.brucemaa.cn/docs/getting-started/</link><description>Recent content in GETTING STARTED on Scala2 官方文档</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://scala2.brucemaa.cn/docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Scala Project with IntelliJ and sbt</title><link>https://scala2.brucemaa.cn/docs/getting-started/intellij-track/building-a-scala-project-with-intellij-and-sbt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scala2.brucemaa.cn/docs/getting-started/intellij-track/building-a-scala-project-with-intellij-and-sbt/</guid><description>In this tutorial, we&amp;rsquo;ll see how to build a Scala project using sbt. sbt is a popular tool for compiling, running, and testing Scala projects of any size. Using a build tool such as sbt (or Maven/Gradle) becomes essential once you create projects with dependencies or more than one code file. We assume you&amp;rsquo;ve completed the first tutorial.
Creating the project # In this section, we&amp;rsquo;ll show you how to create the project in IntelliJ.</description></item><item><title>Getting Started with Scala and sbt on the Command Line</title><link>https://scala2.brucemaa.cn/docs/getting-started/sbt-track/getting-started-with-scala-and-sbt-on-the-command-line/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scala2.brucemaa.cn/docs/getting-started/sbt-track/getting-started-with-scala-and-sbt-on-the-command-line/</guid><description>In this tutorial, you&amp;rsquo;ll see how to create a Scala project from a template. You can use this as a starting point for your own projects. We&amp;rsquo;ll use sbt, the de facto build tool for Scala. sbt compiles, runs, and tests your projects among other related tasks. We assume you know how to use a terminal.
Installation # Make sure you have the Java 8 JDK (also known as 1.</description></item><item><title>Getting Started with Scala in IntelliJ</title><link>https://scala2.brucemaa.cn/docs/getting-started/intellij-track/getting-started-with-scala-in-intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scala2.brucemaa.cn/docs/getting-started/intellij-track/getting-started-with-scala-in-intellij/</guid><description>In this tutorial, we&amp;rsquo;ll see how to build a minimal Scala project using IntelliJ IDE with the Scala plugin. In this guide, IntelliJ will download Scala for you.
Installation # Make sure you have the Java 8 JDK (also known as 1.8) Run javac -version on the command line and make sure you see javac 1.8.___ If you don&amp;rsquo;t have version 1.8 or higher, install the JDK Next, download and install IntelliJ Community Edition Then, after starting up IntelliJ, you can download and install the Scala plugin by following the instructions on how to install IntelliJ plugins (search for &amp;ldquo;Scala&amp;rdquo; in the plugins menu.</description></item><item><title>Testing Scala in IntelliJ with ScalaTest</title><link>https://scala2.brucemaa.cn/docs/getting-started/intellij-track/testing-scala-in-intellij-with-scalatest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scala2.brucemaa.cn/docs/getting-started/intellij-track/testing-scala-in-intellij-with-scalatest/</guid><description>There are multiple libraries and testing methodologies for Scala, but in this tutorial, we&amp;rsquo;ll demonstrate one popular option from the ScalaTest framework called FunSuite.
This assumes you know how to build a project in IntelliJ.
Setup # Create an sbt project in IntelliJ. Add the ScalaTest dependency: Add the ScalaTest dependency to your build.sbt file: libraryDependencies += &amp;quot;org.scalatest&amp;quot; %% &amp;quot;scalatest&amp;quot; % &amp;quot;3.0.8&amp;quot; % Test If you get a notification &amp;ldquo;build.</description></item><item><title>Testing Scala with sbt and ScalaTest on the Command Line</title><link>https://scala2.brucemaa.cn/docs/getting-started/sbt-track/testing-scala-with-sbt-on-the-command-line/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scala2.brucemaa.cn/docs/getting-started/sbt-track/testing-scala-with-sbt-on-the-command-line/</guid><description>There are multiple libraries and testing methodologies for Scala, but in this tutorial, we&amp;rsquo;ll demonstrate one popular option from the ScalaTest framework called AnyFunSuite. We assume you know how to create a Scala project with sbt.
Setup # On the command line, create a new directory somewhere. cd into the directory and run sbt new scala/scalatest-example.g8 Name the project ScalaTestTutorial. The project comes with ScalaTest as a dependency in the build.</description></item></channel></rss>